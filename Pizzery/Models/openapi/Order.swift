//
// Order.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Заказ */
public struct Order: Codable, Hashable {

    public enum Status: Int, Codable, CaseIterable {
        case _0 = 0
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case _4 = 4
    }
    public var id: Int64?
    /** Iiko ID заказа */
    public var iikoId: String?
    /** удалени ли заказ */
    public var isDeleted: Bool?
    /** статус заказа */
    public var status: Status?
    /** дата создания */
    public var createdAt: Int64?
    /** ID клиента */
    public var clientId: Int64?
    /** сумма заказа */
    public var sum: Int64?

    public init(id: Int64? = nil, iikoId: String? = nil, isDeleted: Bool? = nil, status: Status? = nil, createdAt: Int64? = nil, clientId: Int64? = nil, sum: Int64? = nil) {
        self.id = id
        self.iikoId = iikoId
        self.isDeleted = isDeleted
        self.status = status
        self.createdAt = createdAt
        self.clientId = clientId
        self.sum = sum
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case iikoId = "iiko_id"
        case isDeleted = "is_deleted"
        case status
        case createdAt = "created_at"
        case clientId = "client_id"
        case sum
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(iikoId, forKey: .iikoId)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(clientId, forKey: .clientId)
        try container.encodeIfPresent(sum, forKey: .sum)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Order: Identifiable {}
