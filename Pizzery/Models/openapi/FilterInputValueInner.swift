//
// FilterInputValueInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FilterInputValueInner: Codable, Hashable {

    public enum ValueType: String, Codable, CaseIterable {
        case string = "string"
        case int64 = "int64"
    }
    public var valueType: ValueType?
    public var stringValue: String?
    public var int64Value: Int64?

    public init(valueType: ValueType? = nil, stringValue: String? = nil, int64Value: Int64? = nil) {
        self.valueType = valueType
        self.stringValue = stringValue
        self.int64Value = int64Value
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case valueType = "value_type"
        case stringValue = "string_value"
        case int64Value = "int64_value"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(valueType, forKey: .valueType)
        try container.encodeIfPresent(stringValue, forKey: .stringValue)
        try container.encodeIfPresent(int64Value, forKey: .int64Value)
    }
}

