//
// IikoCardInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IikoCardInfo: Codable, Hashable {

    public var coupon: IikoCard51CouponInfo?
    public var appliedManualConditions: [String]?
    /** Order has fixed precalculated iikoCard discounts. */
    public var hasFixedDiscounts: Bool?
    /** map[guid]decimal. Dynamic discount sums for manual condition. It applies optionally with arbitrary discount value */
    public var dynamicDiscounts: [String: AppliedDiscountItemDiscountSumByOrderItemIdValue]?

    public init(coupon: IikoCard51CouponInfo? = nil, appliedManualConditions: [String]? = nil, hasFixedDiscounts: Bool? = nil, dynamicDiscounts: [String: AppliedDiscountItemDiscountSumByOrderItemIdValue]? = nil) {
        self.coupon = coupon
        self.appliedManualConditions = appliedManualConditions
        self.hasFixedDiscounts = hasFixedDiscounts
        self.dynamicDiscounts = dynamicDiscounts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case coupon = "Coupon"
        case appliedManualConditions = "AppliedManualConditions"
        case hasFixedDiscounts = "HasFixedDiscounts"
        case dynamicDiscounts = "DynamicDiscounts"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(coupon, forKey: .coupon)
        try container.encodeIfPresent(appliedManualConditions, forKey: .appliedManualConditions)
        try container.encodeIfPresent(hasFixedDiscounts, forKey: .hasFixedDiscounts)
        try container.encodeIfPresent(dynamicDiscounts, forKey: .dynamicDiscounts)
    }
}

