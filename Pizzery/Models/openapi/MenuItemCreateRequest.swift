//
// MenuItemCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MenuItemCreateRequest: Codable, Hashable {

    public var id: Int64?
    /** Название позиции */
    public var name: String
    /** Описание позиции */
    public var description: String?
    /** Цена позиции */
    public var price: Double?
    /** Доступна ли позиция */
    public var visible: Bool?
    public var menuCategoryId: Int64?
    /** url иконки */
    public var icon: String?
    /** Позиция в списке */
    public var position: Int?
    /** Вес */
    public var weight: Int64?
    /** Калории */
    public var calories: Int64?
    /** Белки */
    public var proteins: Int64?
    /** Жиры */
    public var fats: Int64?
    /** Углеводы */
    public var carbs: Int64?
    /** Состав блюда */
    public var composition: String?
    /** ID Партнера */
    public var partnerId: Int64?
    /** Айко ID */
    public var iikoId: String?
    /** Удален */
    public var isDeleted: Bool?

    public init(id: Int64? = nil, name: String, description: String? = nil, price: Double? = nil, visible: Bool? = nil, menuCategoryId: Int64? = nil, icon: String? = nil, position: Int? = nil, weight: Int64? = nil, calories: Int64? = nil, proteins: Int64? = nil, fats: Int64? = nil, carbs: Int64? = nil, composition: String? = nil, partnerId: Int64? = nil, iikoId: String? = nil, isDeleted: Bool? = nil) {
        self.id = id
        self.name = name
        self.description = description
        self.price = price
        self.visible = visible
        self.menuCategoryId = menuCategoryId
        self.icon = icon
        self.position = position
        self.weight = weight
        self.calories = calories
        self.proteins = proteins
        self.fats = fats
        self.carbs = carbs
        self.composition = composition
        self.partnerId = partnerId
        self.iikoId = iikoId
        self.isDeleted = isDeleted
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case price
        case visible
        case menuCategoryId = "menu_category_id"
        case icon
        case position
        case weight
        case calories
        case proteins
        case fats
        case carbs
        case composition
        case partnerId = "partner_id"
        case iikoId = "iiko_id"
        case isDeleted = "is_deleted"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(visible, forKey: .visible)
        try container.encodeIfPresent(menuCategoryId, forKey: .menuCategoryId)
        try container.encodeIfPresent(icon, forKey: .icon)
        try container.encodeIfPresent(position, forKey: .position)
        try container.encodeIfPresent(weight, forKey: .weight)
        try container.encodeIfPresent(calories, forKey: .calories)
        try container.encodeIfPresent(proteins, forKey: .proteins)
        try container.encodeIfPresent(fats, forKey: .fats)
        try container.encodeIfPresent(carbs, forKey: .carbs)
        try container.encodeIfPresent(composition, forKey: .composition)
        try container.encodeIfPresent(partnerId, forKey: .partnerId)
        try container.encodeIfPresent(iikoId, forKey: .iikoId)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension MenuItemCreateRequest: Identifiable {}
