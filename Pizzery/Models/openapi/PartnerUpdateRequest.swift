//
// PartnerUpdateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PartnerUpdateRequest: Codable, Hashable {

    public var id: Int64?
    public var email: String
    public var name: String?
    /** Название торговой сети */
    public var label: String
    /** факт добавления iiko api key после регистрации */
    public var availabilityIikoKey: Bool?
    /** партнер удален */
    public var isDeleted: Bool?

    public init(id: Int64? = nil, email: String, name: String? = nil, label: String, availabilityIikoKey: Bool? = nil, isDeleted: Bool? = nil) {
        self.id = id
        self.email = email
        self.name = name
        self.label = label
        self.availabilityIikoKey = availabilityIikoKey
        self.isDeleted = isDeleted
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case email
        case name
        case label
        case availabilityIikoKey = "availability_iiko_key"
        case isDeleted = "is_deleted"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(email, forKey: .email)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encode(label, forKey: .label)
        try container.encodeIfPresent(availabilityIikoKey, forKey: .availabilityIikoKey)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PartnerUpdateRequest: Identifiable {}
