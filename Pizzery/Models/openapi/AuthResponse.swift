//
// AuthResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Обобщенный ответ на разные запрос авторизации */
public struct AuthResponse: Codable, Hashable {

    /** Время истечения жизни jwt-токена (timestamp в миллисекундах) */
    public var accessExpiresAt: Int64?
    /** Время истечения жизни jwt-токена (timestamp в миллисекундах) */
    public var refreshExpiresAt: Int64?
    /** текущее серверное время (timestamp в миллисекундах) */
    public var serverTime: Int64?
    public var user: UserResponse

    public init(accessExpiresAt: Int64? = nil, refreshExpiresAt: Int64? = nil, serverTime: Int64? = nil, user: UserResponse) {
        self.accessExpiresAt = accessExpiresAt
        self.refreshExpiresAt = refreshExpiresAt
        self.serverTime = serverTime
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accessExpiresAt = "access_expires_at"
        case refreshExpiresAt = "refresh_expires_at"
        case serverTime = "server_time"
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(accessExpiresAt, forKey: .accessExpiresAt)
        try container.encodeIfPresent(refreshExpiresAt, forKey: .refreshExpiresAt)
        try container.encodeIfPresent(serverTime, forKey: .serverTime)
        try container.encode(user, forKey: .user)
    }
}

