//
// ChequeAdditionalInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Cheque additional information according to russian federal law */
public struct ChequeAdditionalInfo: Codable, Hashable {

    /** Whether paper cheque should be printed. */
    public var needReceipt: Bool?
    /** Phone to send cheque information (by sms). */
    public var phone: String?
    /** Email to send cheque information. */
    public var email: String?
    /** Settlement place. */
    public var settlementPlace: String?

    public init(needReceipt: Bool? = nil, phone: String? = nil, email: String? = nil, settlementPlace: String? = nil) {
        self.needReceipt = needReceipt
        self.phone = phone
        self.email = email
        self.settlementPlace = settlementPlace
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case needReceipt = "NeedReceipt"
        case phone = "Phone"
        case email = "Email"
        case settlementPlace = "SettlementPlace"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(needReceipt, forKey: .needReceipt)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(settlementPlace, forKey: .settlementPlace)
    }
}

