//
// ReviewCreateResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReviewCreateResponse: Codable, Hashable {

    public var linksToMaps: [String]?
    public var id: Int64?
    /** Идентификатор клиента, к которому относится клиент */
    public var clientId: Int64
    /** Идентификатор ресторана, к которому относится отзыв */
    public var outletId: Int64?
    /** Идентификатор партнера, к которому относится отзыв */
    public var partnerId: Int64?
    /** Отзыв */
    public var review: String
    /** unix timestamp ms */
    public var createdAt: Int64?
    /** Оценка клиента от 1 до 5 */
    public var rating: Int
    /** Видно ли отзыв */
    public var visible: Bool

    public init(linksToMaps: [String]? = nil, id: Int64? = nil, clientId: Int64, outletId: Int64? = nil, partnerId: Int64? = nil, review: String, createdAt: Int64? = nil, rating: Int, visible: Bool) {
        self.linksToMaps = linksToMaps
        self.id = id
        self.clientId = clientId
        self.outletId = outletId
        self.partnerId = partnerId
        self.review = review
        self.createdAt = createdAt
        self.rating = rating
        self.visible = visible
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case linksToMaps = "links_to_maps"
        case id
        case clientId = "client_id"
        case outletId = "outlet_id"
        case partnerId = "partner_id"
        case review
        case createdAt = "created_at"
        case rating
        case visible
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(linksToMaps, forKey: .linksToMaps)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(clientId, forKey: .clientId)
        try container.encodeIfPresent(outletId, forKey: .outletId)
        try container.encodeIfPresent(partnerId, forKey: .partnerId)
        try container.encode(review, forKey: .review)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encode(rating, forKey: .rating)
        try container.encode(visible, forKey: .visible)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ReviewCreateResponse: Identifiable {}
