//
// DiscountItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Discount item is the result of adding discount to an order, contains discount parameters, which will be used to calculate sums. While discount params are persistent, discount sums are calculated on demand, because they are subject to change (they may depend on the time, etc). Call IOperationService. GetOrderAppliedDiscounts to get calculated sums */
public struct DiscountItem: Codable, Hashable {

    public var discountType: DiscountType?
    /** Whether this discount item is applied selectively to some order items */
    public var isSelectivelyApplied: Bool?
    public var discountPaymentItem: PaymentItem?

    public init(discountType: DiscountType? = nil, isSelectivelyApplied: Bool? = nil, discountPaymentItem: PaymentItem? = nil) {
        self.discountType = discountType
        self.isSelectivelyApplied = isSelectivelyApplied
        self.discountPaymentItem = discountPaymentItem
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case discountType = "DiscountType"
        case isSelectivelyApplied = "IsSelectivelyApplied"
        case discountPaymentItem = "DiscountPaymentItem"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(discountType, forKey: .discountType)
        try container.encodeIfPresent(isSelectivelyApplied, forKey: .isSelectivelyApplied)
        try container.encodeIfPresent(discountPaymentItem, forKey: .discountPaymentItem)
    }
}

