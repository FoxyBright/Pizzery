//
// BonusTransaction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Транзакция бонусов */
public struct BonusTransaction: Codable, Hashable {

    public var id: Int64?
    /** unix timestamp ms */
    public var createdAt: Int64?
    /** Сумма (в копейках) */
    public var amount: Int64
    /** id клиента по которому проводилась транзакция */
    public var clientId: Int64
    public var creatorName: String?
    public var creatorRole: UserRole?
    public var creatorEmployeeRole: EmployeeRole?
    public var reason: BonusTransactionReason
    /** Комментарий */
    public var comment: String?
    public var type: BonusTransactionType

    public init(id: Int64? = nil, createdAt: Int64? = nil, amount: Int64, clientId: Int64, creatorName: String? = nil, creatorRole: UserRole? = nil, creatorEmployeeRole: EmployeeRole? = nil, reason: BonusTransactionReason, comment: String? = nil, type: BonusTransactionType) {
        self.id = id
        self.createdAt = createdAt
        self.amount = amount
        self.clientId = clientId
        self.creatorName = creatorName
        self.creatorRole = creatorRole
        self.creatorEmployeeRole = creatorEmployeeRole
        self.reason = reason
        self.comment = comment
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case createdAt = "created_at"
        case amount
        case clientId = "client_id"
        case creatorName = "creator_name"
        case creatorRole = "creator_role"
        case creatorEmployeeRole = "creator_employee_role"
        case reason
        case comment
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encode(amount, forKey: .amount)
        try container.encode(clientId, forKey: .clientId)
        try container.encodeIfPresent(creatorName, forKey: .creatorName)
        try container.encodeIfPresent(creatorRole, forKey: .creatorRole)
        try container.encodeIfPresent(creatorEmployeeRole, forKey: .creatorEmployeeRole)
        try container.encode(reason, forKey: .reason)
        try container.encodeIfPresent(comment, forKey: .comment)
        try container.encode(type, forKey: .type)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension BonusTransaction: Identifiable {}
