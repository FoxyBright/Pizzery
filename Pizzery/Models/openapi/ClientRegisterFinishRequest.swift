//
// ClientRegisterFinishRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ClientRegisterFinishRequest: Codable, Hashable {

    public var email: String?
    /** День др */
    public var dayOfBirth: Int64?
    /** Месяц др */
    public var monthOfBirth: Int64?
    /** Год др */
    public var yearOfBirth: Int64?
    public var gender: Gender?
    /** Код карты лояльности (старый реф код!) переиспользовать на ref_code */
    public var loyaltyCard: String?
    /** реферальный код */
    public var refCode: String?
    /** Имя */
    public var firstName: String?
    /** Фамилия */
    public var lastName: String?
    /** Отчество при наличии */
    public var middleName: String?

    public init(email: String? = nil, dayOfBirth: Int64? = nil, monthOfBirth: Int64? = nil, yearOfBirth: Int64? = nil, gender: Gender? = nil, loyaltyCard: String? = nil, refCode: String? = nil, firstName: String? = nil, lastName: String? = nil, middleName: String? = nil) {
        self.email = email
        self.dayOfBirth = dayOfBirth
        self.monthOfBirth = monthOfBirth
        self.yearOfBirth = yearOfBirth
        self.gender = gender
        self.loyaltyCard = loyaltyCard
        self.refCode = refCode
        self.firstName = firstName
        self.lastName = lastName
        self.middleName = middleName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case email
        case dayOfBirth = "day_of_birth"
        case monthOfBirth = "month_of_birth"
        case yearOfBirth = "year_of_birth"
        case gender
        case loyaltyCard = "loyalty_card"
        case refCode = "ref_code"
        case firstName = "first_name"
        case lastName = "last_name"
        case middleName = "middle_name"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(dayOfBirth, forKey: .dayOfBirth)
        try container.encodeIfPresent(monthOfBirth, forKey: .monthOfBirth)
        try container.encodeIfPresent(yearOfBirth, forKey: .yearOfBirth)
        try container.encodeIfPresent(gender, forKey: .gender)
        try container.encodeIfPresent(loyaltyCard, forKey: .loyaltyCard)
        try container.encodeIfPresent(refCode, forKey: .refCode)
        try container.encodeIfPresent(firstName, forKey: .firstName)
        try container.encodeIfPresent(lastName, forKey: .lastName)
        try container.encodeIfPresent(middleName, forKey: .middleName)
    }
}

