//
// MenuCategoryCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MenuCategoryCreateRequest: Codable, Hashable {

    public var id: Int64?
    /** Идентификатор партнера, к которому относится категория */
    public var partnerId: Int64?
    /** Идентификатор меню, к которому относится категория */
    public var menuId: Int64?
    /** Название категории */
    public var name: String
    /** Описание категории */
    public var description: String?
    /** Доступна ли категория */
    public var visible: Bool?
    /** Позиция в списке */
    public var position: Int?
    /** url иконки */
    public var icon: String?
    /** Доступна ли категория всегда */
    public var isAlwaysAvalable: Bool?
    public var availableWeekDays: AvalilableWeekDays
    public var availableTime: AvalilableTime
    /** Айко ID */
    public var iikoId: String?
    /** Удален */
    public var isDeleted: Bool?
    /** Блюда */
    public var menuItems: [MenuItem]?

    public init(id: Int64? = nil, partnerId: Int64? = nil, menuId: Int64? = nil, name: String, description: String? = nil, visible: Bool? = nil, position: Int? = nil, icon: String? = nil, isAlwaysAvalable: Bool? = nil, availableWeekDays: AvalilableWeekDays, availableTime: AvalilableTime, iikoId: String? = nil, isDeleted: Bool? = nil, menuItems: [MenuItem]? = nil) {
        self.id = id
        self.partnerId = partnerId
        self.menuId = menuId
        self.name = name
        self.description = description
        self.visible = visible
        self.position = position
        self.icon = icon
        self.isAlwaysAvalable = isAlwaysAvalable
        self.availableWeekDays = availableWeekDays
        self.availableTime = availableTime
        self.iikoId = iikoId
        self.isDeleted = isDeleted
        self.menuItems = menuItems
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case partnerId = "partner_id"
        case menuId = "menu_id"
        case name
        case description
        case visible
        case position
        case icon
        case isAlwaysAvalable = "is_always_avalable"
        case availableWeekDays = "available_week_days"
        case availableTime = "available_time"
        case iikoId = "iiko_id"
        case isDeleted = "is_deleted"
        case menuItems = "menu_items"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(partnerId, forKey: .partnerId)
        try container.encodeIfPresent(menuId, forKey: .menuId)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(visible, forKey: .visible)
        try container.encodeIfPresent(position, forKey: .position)
        try container.encodeIfPresent(icon, forKey: .icon)
        try container.encodeIfPresent(isAlwaysAvalable, forKey: .isAlwaysAvalable)
        try container.encode(availableWeekDays, forKey: .availableWeekDays)
        try container.encode(availableTime, forKey: .availableTime)
        try container.encodeIfPresent(iikoId, forKey: .iikoId)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
        try container.encodeIfPresent(menuItems, forKey: .menuItems)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension MenuCategoryCreateRequest: Identifiable {}
