//
// GeocodingReverseRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GeocodingReverseRequest: Codable, Hashable {

    public var lat: Double
    public var lon: Double
    /** Кол-во возвращаемых результатов (по умолчанию 10, максимум 20) */
    public var count: Int64?
    /** Радиус поиска в метрах (по умолчанию 100, максимум 1000) */
    public var radiusMeters: Int64?
    /** ru / en (по умолчанию ru) */
    public var language: String?

    public init(lat: Double, lon: Double, count: Int64? = nil, radiusMeters: Int64? = nil, language: String? = nil) {
        self.lat = lat
        self.lon = lon
        self.count = count
        self.radiusMeters = radiusMeters
        self.language = language
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lat
        case lon
        case count
        case radiusMeters = "radius_meters"
        case language
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(lat, forKey: .lat)
        try container.encode(lon, forKey: .lon)
        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(radiusMeters, forKey: .radiusMeters)
        try container.encodeIfPresent(language, forKey: .language)
    }
}

