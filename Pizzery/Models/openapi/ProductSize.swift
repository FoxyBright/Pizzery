//
// ProductSize.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Size of the product, affects ingredient consumption and price. */
public struct ProductSize: Codable, Hashable {

    public var id: String?
    /** Name of the product size. */
    public var name: String?
    /** Name of the product size adapted for kitchen displays (usually as short as possible). */
    public var kitchenName: String?
    /** Gets an index of the current size in the list of the product scale sizes, can be used to sort product sizes in menu. */
    public var menuIndex: Int?

    public init(id: String? = nil, name: String? = nil, kitchenName: String? = nil, menuIndex: Int? = nil) {
        self.id = id
        self.name = name
        self.kitchenName = kitchenName
        self.menuIndex = menuIndex
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "Id"
        case name = "Name"
        case kitchenName = "KitchenName"
        case menuIndex = "MenuIndex"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(kitchenName, forKey: .kitchenName)
        try container.encodeIfPresent(menuIndex, forKey: .menuIndex)
    }
}

