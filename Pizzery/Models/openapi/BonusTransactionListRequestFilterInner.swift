//
// BonusTransactionListRequestFilterInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BonusTransactionListRequestFilterInner: Codable, Hashable {

    public enum FilterParameter: String, Codable, CaseIterable {
        case createdAt = "created_at"
        case clientId = "client_id"
        case amount = "amount"
        case reason = "reason"
        case type = "type"
    }
    /** Параметр, по которому осуществляется фильтрация.   created_at - По дате создания. value_type: int64, value_group: interval;   client_id - Айди клиента. value_type: int64, value_group: single;   amount - По кол-ву баллов. value_type: int64, value_group: interval;   reason - По причине. value_type: string, value_group: single использовать BonusTransactionReason;   type - По типу. value_type: string, value_group: single использовать BonusTransactionType;  */
    public var filterParameter: FilterParameter
    public var inputValue: [FilterInputValueInner]?
    public var valueGroup: FilterValueGroup
    public var filterType: FilterType

    public init(filterParameter: FilterParameter, inputValue: [FilterInputValueInner]? = nil, valueGroup: FilterValueGroup, filterType: FilterType) {
        self.filterParameter = filterParameter
        self.inputValue = inputValue
        self.valueGroup = valueGroup
        self.filterType = filterType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case filterParameter = "filter_parameter"
        case inputValue = "input_value"
        case valueGroup = "value_group"
        case filterType = "filter_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(filterParameter, forKey: .filterParameter)
        try container.encodeIfPresent(inputValue, forKey: .inputValue)
        try container.encode(valueGroup, forKey: .valueGroup)
        try container.encode(filterType, forKey: .filterType)
    }
}

